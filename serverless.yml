service: shravani-static-website

provider:
  name: aws
  runtime: nodejs18.x
  region: ca-central-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:CreateBucket"
        - "s3:DeleteBucket"
        - "s3:GetBucketLocation"
        - "s3:ListBucket"
        - "s3:PutBucketPolicy"
        - "s3:PutObject"
        - "s3:DeleteObject"
        - "s3:GetObject"
        - "s3:ListBucketVersions"
        - "s3:GetBucketPolicy"
      Resource:
        - "arn:aws:s3:::${self:custom.bucketName}"
        - "arn:aws:s3:::${self:custom.bucketName}/*"
    - Effect: "Allow"
      Action:
        - "cloudformation:CreateStack"
        - "cloudformation:DeleteStack"
        - "cloudformation:DescribeStackResources"
        - "cloudformation:DescribeStacks"
        - "cloudformation:GetTemplateSummary"
        - "cloudformation:UpdateStack"
        - logs:CreateLogStream
        - logs:CreateLogGroup
        - logs:PutLogEvents
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "iam:PassRole"
      Resource: "*"

plugins:
  - serverless-s3-sync

custom:
  bucketName: shravani-angular-bucket
  s3Sync:
    buckets:
      - bucketName: ${self:custom.bucketName}
        localDir: dist/frontend-demo-website

resources:
  Resources:
    WebsiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html
    
    WebsiteBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref WebsiteBucket
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal: "*"
              Action: "s3:GetObject"
              Resource: "arn:aws:s3:::${self:custom.bucketName}/*"


# service: shravani-static-website

# provider:
#   name: aws
#   runtime: nodejs18.x
#   region: ca-central-1
#   iamRoleStatements:
#     - Effect: "Allow"
#       Action:
#         - "s3:CreateBucket"
#         - "s3:DeleteBucket"
#         - "s3:GetBucketLocation"
#         - "s3:ListBucket"
#         - "s3:PutBucketPolicy"
#         - "s3:PutObject"
#         - "s3:DeleteObject"
#         - "s3:GetObject"
#         - "s3:ListBucketVersions"
#         - "s3:GetBucketPolicy"
#       Resource:
#         - "arn:aws:s3:::${self:custom.bucketName}"
#         - "arn:aws:s3:::${self:custom.bucketName}/*"
#     - Effect: "Allow"
#       Action:
#         - "cloudformation:CreateStack"
#         - "cloudformation:DeleteStack"
#         - "cloudformation:DescribeStackResources"
#         - "cloudformation:DescribeStacks"
#         - "cloudformation:GetTemplateSummary"
#         - "cloudformation:UpdateStack"
#         - logs:CreateLogStream
#         - logs:CreateLogGroup
#         - logs:PutLogEvents
#       Resource: "*"
#     # - Effect: "Allow"
#     #   Action:
#     #     - "iam:PassRole"
#     #   Resource: "*"

# plugins:
#   - serverless-s3-sync

# custom:
#   bucketName: shravani-angular-bucket
#   iamUserArn: arn:aws:iam::839728096237:user/shravani_serverless
#   s3Sync:
#     buckets:
#       - bucketName: ${self:custom.bucketName}
#         localDir: dist

# resources:
#   Resources:
#     WebsiteBucket:
#       Type: AWS::S3::Bucket
#       Properties:
#         BucketName: ${self:custom.bucketName}
#         AccessControl: PublicRead
#         WebsiteConfiguration:
#           IndexDocument: index.html
#           ErrorDocument: index.html
    
#     WebsiteBucketPolicy:
#       Type: AWS::S3::BucketPolicy
#       Properties:
#         Bucket: !Ref WebsiteBucket
#         PolicyDocument:
#           Version: "2012-10-17"
#           Statement:
#             - Effect: Allow
#               Principal:
#                 # AWS: "*"
#                 AWS: ${self:custom.iamUserArn}

#               Action: "s3:GetObject"
#               Resource: "arn:aws:s3:::${self:custom.bucketName}/*"
